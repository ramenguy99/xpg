from enum import IntEnum, IntFlag
from typing import Tuple, Optional

class ID: ...
class Vec2: ...
class Vec4: ...
class Color: ...
class Viewport: ...
class DrawList: ...
class Font: ...
class WindowClass: ...
class Payload: ...
class Storage: ...
class TextureID: ...
class DrawListSharedData: ...
class PlatformIO: ...
class Style: ...
class size_t: ...
class double: ...

class WindowFlags(IntFlag):
    NONE = 0x0
    NO_TITLE_BAR = 0x1
    NO_RESIZE = 0x2
    NO_MOVE = 0x4
    NO_SCROLLBAR = 0x8
    NO_SCROLL_WITH_MOUSE = 0x10
    NO_COLLAPSE = 0x20
    ALWAYS_AUTO_RESIZE = 0x40
    NO_BACKGROUND = 0x80
    NO_SAVED_SETTINGS = 0x100
    NO_MOUSE_INPUTS = 0x200
    MENU_BAR = 0x400
    HORIZONTAL_SCROLLBAR = 0x800
    NO_FOCUS_ON_APPEARING = 0x1000
    NO_BRING_TO_FRONT_ON_FOCUS = 0x2000
    ALWAYS_VERTICAL_SCROLLBAR = 0x4000
    ALWAYS_HORIZONTAL_SCROLLBAR = 0x8000
    NO_NAV_INPUTS = 0x10000
    NO_NAV_FOCUS = 0x20000
    UNSAVED_DOCUMENT = 0x40000
    NO_DOCKING = 0x80000
    NO_NAV = 0x30000
    NO_DECORATION = 0x2b
    NO_INPUTS = 0x30200
    DOCK_NODE_HOST = 0x800000
    CHILD_WINDOW = 0x1000000
    TOOLTIP = 0x2000000
    POPUP = 0x4000000
    MODAL = 0x8000000
    CHILD_MENU = 0x10000000
    NAV_FLATTENED = 0x20000000
    ALWAYS_USE_WINDOW_PADDING = 0x40000000

class ChildFlags(IntFlag):
    NONE = 0x0
    BORDERS = 0x1
    ALWAYS_USE_WINDOW_PADDING = 0x2
    RESIZE_X = 0x4
    RESIZE_Y = 0x8
    AUTO_RESIZE_X = 0x10
    AUTO_RESIZE_Y = 0x20
    ALWAYS_AUTO_RESIZE = 0x40
    FRAME_STYLE = 0x80
    NAV_FLATTENED = 0x100
    BORDER = 0x1

class ItemFlags(IntFlag):
    NONE = 0x0
    NO_TAB_STOP = 0x1
    NO_NAV = 0x2
    NO_NAV_DEFAULT_FOCUS = 0x4
    BUTTON_REPEAT = 0x8
    AUTO_CLOSE_POPUPS = 0x10
    ALLOW_DUPLICATE_ID = 0x20

class InputTextFlags(IntFlag):
    NONE = 0x0
    CHARS_DECIMAL = 0x1
    CHARS_HEXADECIMAL = 0x2
    CHARS_SCIENTIFIC = 0x4
    CHARS_UPPERCASE = 0x8
    CHARS_NO_BLANK = 0x10
    ALLOW_TAB_INPUT = 0x20
    ENTER_RETURNS_TRUE = 0x40
    ESCAPE_CLEARS_ALL = 0x80
    CTRL_ENTER_FOR_NEW_LINE = 0x100
    READ_ONLY = 0x200
    PASSWORD = 0x400
    ALWAYS_OVERWRITE = 0x800
    AUTO_SELECT_ALL = 0x1000
    PARSE_EMPTY_REF_VAL = 0x2000
    DISPLAY_EMPTY_REF_VAL = 0x4000
    NO_HORIZONTAL_SCROLL = 0x8000
    NO_UNDO_REDO = 0x10000
    ELIDE_LEFT = 0x20000
    CALLBACK_COMPLETION = 0x40000
    CALLBACK_HISTORY = 0x80000
    CALLBACK_ALWAYS = 0x100000
    CALLBACK_CHAR_FILTER = 0x200000
    CALLBACK_RESIZE = 0x400000
    CALLBACK_EDIT = 0x800000

class TreeNodeFlags(IntFlag):
    NONE = 0x0
    SELECTED = 0x1
    FRAMED = 0x2
    ALLOW_OVERLAP = 0x4
    NO_TREE_PUSH_ON_OPEN = 0x8
    NO_AUTO_OPEN_ON_LOG = 0x10
    DEFAULT_OPEN = 0x20
    OPEN_ON_DOUBLE_CLICK = 0x40
    OPEN_ON_ARROW = 0x80
    LEAF = 0x100
    BULLET = 0x200
    FRAME_PADDING = 0x400
    SPAN_AVAIL_WIDTH = 0x800
    SPAN_FULL_WIDTH = 0x1000
    SPAN_LABEL_WIDTH = 0x2000
    SPAN_ALL_COLUMNS = 0x4000
    LABEL_SPAN_ALL_COLUMNS = 0x8000
    NAV_LEFT_JUMPS_BACK_HERE = 0x20000
    COLLAPSING_HEADER = 0x1a
    ALLOW_ITEM_OVERLAP = 0x4
    SPAN_TEXT_WIDTH = 0x2000

class PopupFlags(IntFlag):
    NONE = 0x0
    MOUSE_BUTTON_LEFT = 0x0
    MOUSE_BUTTON_RIGHT = 0x1
    MOUSE_BUTTON_MIDDLE = 0x2
    MOUSE_BUTTON_MASK_ = 0x1f
    MOUSE_BUTTON_DEFAULT_ = 0x1
    NO_REOPEN = 0x20
    NO_OPEN_OVER_EXISTING_POPUP = 0x80
    NO_OPEN_OVER_ITEMS = 0x100
    ANY_POPUP_ID = 0x400
    ANY_POPUP_LEVEL = 0x800
    ANY_POPUP = 0xc00

class SelectableFlags(IntFlag):
    NONE = 0x0
    NO_AUTO_CLOSE_POPUPS = 0x1
    SPAN_ALL_COLUMNS = 0x2
    ALLOW_DOUBLE_CLICK = 0x4
    DISABLED = 0x8
    ALLOW_OVERLAP = 0x10
    HIGHLIGHT = 0x20
    DONT_CLOSE_POPUPS = 0x1
    ALLOW_ITEM_OVERLAP = 0x10

class ComboFlags(IntFlag):
    NONE = 0x0
    POPUP_ALIGN_LEFT = 0x1
    HEIGHT_SMALL = 0x2
    HEIGHT_REGULAR = 0x4
    HEIGHT_LARGE = 0x8
    HEIGHT_LARGEST = 0x10
    NO_ARROW_BUTTON = 0x20
    NO_PREVIEW = 0x40
    WIDTH_FIT_PREVIEW = 0x80
    HEIGHT_MASK_ = 0x1e

class TabBarFlags(IntFlag):
    NONE = 0x0
    REORDERABLE = 0x1
    AUTO_SELECT_NEW_TABS = 0x2
    TAB_LIST_POPUP_BUTTON = 0x4
    NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON = 0x8
    NO_TAB_LIST_SCROLLING_BUTTONS = 0x10
    NO_TOOLTIP = 0x20
    DRAW_SELECTED_OVERLINE = 0x40
    FITTING_POLICY_RESIZE_DOWN = 0x80
    FITTING_POLICY_SCROLL = 0x100
    FITTING_POLICY_MASK_ = 0x180
    FITTING_POLICY_DEFAULT_ = 0x80

class TabItemFlags(IntFlag):
    NONE = 0x0
    UNSAVED_DOCUMENT = 0x1
    SET_SELECTED = 0x2
    NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON = 0x4
    NO_PUSH_ID = 0x8
    NO_TOOLTIP = 0x10
    NO_REORDER = 0x20
    LEADING = 0x40
    TRAILING = 0x80
    NO_ASSUMED_CLOSURE = 0x100

class FocusedFlags(IntFlag):
    NONE = 0x0
    CHILD_WINDOWS = 0x1
    ROOT_WINDOW = 0x2
    ANY_WINDOW = 0x4
    NO_POPUP_HIERARCHY = 0x8
    DOCK_HIERARCHY = 0x10
    ROOT_AND_CHILD_WINDOWS = 0x3

class HoveredFlags(IntFlag):
    NONE = 0x0
    CHILD_WINDOWS = 0x1
    ROOT_WINDOW = 0x2
    ANY_WINDOW = 0x4
    NO_POPUP_HIERARCHY = 0x8
    DOCK_HIERARCHY = 0x10
    ALLOW_WHEN_BLOCKED_BY_POPUP = 0x20
    ALLOW_WHEN_BLOCKED_BY_ACTIVE_ITEM = 0x80
    ALLOW_WHEN_OVERLAPPED_BY_ITEM = 0x100
    ALLOW_WHEN_OVERLAPPED_BY_WINDOW = 0x200
    ALLOW_WHEN_DISABLED = 0x400
    NO_NAV_OVERRIDE = 0x800
    ALLOW_WHEN_OVERLAPPED = 0x300
    RECT_ONLY = 0x3a0
    ROOT_AND_CHILD_WINDOWS = 0x3
    FOR_TOOLTIP = 0x1000
    STATIONARY = 0x2000
    DELAY_NONE = 0x4000
    DELAY_SHORT = 0x8000
    DELAY_NORMAL = 0x10000
    NO_SHARED_DELAY = 0x20000

class DockNodeFlags(IntFlag):
    NONE = 0x0
    KEEP_ALIVE_ONLY = 0x1
    NO_DOCKING_OVER_CENTRAL_NODE = 0x4
    PASSTHRU_CENTRAL_NODE = 0x8
    NO_DOCKING_SPLIT = 0x10
    NO_RESIZE = 0x20
    AUTO_HIDE_TAB_BAR = 0x40
    NO_UNDOCKING = 0x80
    NO_SPLIT = 0x10
    NO_DOCKING_IN_CENTRAL_NODE = 0x4

class DragDropFlags(IntFlag):
    NONE = 0x0
    SOURCE_NO_PREVIEW_TOOLTIP = 0x1
    SOURCE_NO_DISABLE_HOVER = 0x2
    SOURCE_NO_HOLD_TO_OPEN_OTHERS = 0x4
    SOURCE_ALLOW_NULL_ID = 0x8
    SOURCE_EXTERN = 0x10
    PAYLOAD_AUTO_EXPIRE = 0x20
    PAYLOAD_NO_CROSS_CONTEXT = 0x40
    PAYLOAD_NO_CROSS_PROCESS = 0x80
    ACCEPT_BEFORE_DELIVERY = 0x400
    ACCEPT_NO_DRAW_DEFAULT_RECT = 0x800
    ACCEPT_NO_PREVIEW_TOOLTIP = 0x1000
    ACCEPT_PEEK_ONLY = 0xc00
    SOURCE_AUTO_EXPIRE_PAYLOAD = 0x20

class DataType(IntEnum):
    S8 = 0
    U8 = 1
    S16 = 2
    U16 = 3
    S32 = 4
    U32 = 5
    S64 = 6
    U64 = 7
    FLOAT = 8
    DOUBLE = 9
    BOOL = 10
    STRING = 11

class Dir(IntEnum):
    NONE = -1
    LEFT = 0
    RIGHT = 1
    UP = 2
    DOWN = 3

class SortDirection(IntEnum):
    NONE = 0
    ASCENDING = 1
    DESCENDING = 2

class Key(IntEnum):
    NONE = 0
    NAMED_KEY__B_E_G_I_N = 512
    TAB = 512
    LEFT_ARROW = 513
    RIGHT_ARROW = 514
    UP_ARROW = 515
    DOWN_ARROW = 516
    PAGE_UP = 517
    PAGE_DOWN = 518
    HOME = 519
    END = 520
    INSERT = 521
    DELETE = 522
    BACKSPACE = 523
    SPACE = 524
    ENTER = 525
    ESCAPE = 526
    LEFT_CTRL = 527
    LEFT_SHIFT = 528
    LEFT_ALT = 529
    LEFT_SUPER = 530
    RIGHT_CTRL = 531
    RIGHT_SHIFT = 532
    RIGHT_ALT = 533
    RIGHT_SUPER = 534
    MENU = 535
    KEY_0 = 536
    KEY_1 = 537
    KEY_2 = 538
    KEY_3 = 539
    KEY_4 = 540
    KEY_5 = 541
    KEY_6 = 542
    KEY_7 = 543
    KEY_8 = 544
    KEY_9 = 545
    A = 546
    B = 547
    C = 548
    D = 549
    E = 550
    F = 551
    G = 552
    H = 553
    I = 554
    J = 555
    K = 556
    L = 557
    M = 558
    N = 559
    O = 560
    P = 561
    Q = 562
    R = 563
    S = 564
    T = 565
    U = 566
    V = 567
    W = 568
    X = 569
    Y = 570
    Z = 571
    F1 = 572
    F2 = 573
    F3 = 574
    F4 = 575
    F5 = 576
    F6 = 577
    F7 = 578
    F8 = 579
    F9 = 580
    F10 = 581
    F11 = 582
    F12 = 583
    F13 = 584
    F14 = 585
    F15 = 586
    F16 = 587
    F17 = 588
    F18 = 589
    F19 = 590
    F20 = 591
    F21 = 592
    F22 = 593
    F23 = 594
    F24 = 595
    APOSTROPHE = 596
    COMMA = 597
    MINUS = 598
    PERIOD = 599
    SLASH = 600
    SEMICOLON = 601
    EQUAL = 602
    LEFT_BRACKET = 603
    BACKSLASH = 604
    RIGHT_BRACKET = 605
    GRAVE_ACCENT = 606
    CAPS_LOCK = 607
    SCROLL_LOCK = 608
    NUM_LOCK = 609
    PRINT_SCREEN = 610
    PAUSE = 611
    KEYPAD0 = 612
    KEYPAD1 = 613
    KEYPAD2 = 614
    KEYPAD3 = 615
    KEYPAD4 = 616
    KEYPAD5 = 617
    KEYPAD6 = 618
    KEYPAD7 = 619
    KEYPAD8 = 620
    KEYPAD9 = 621
    KEYPAD_DECIMAL = 622
    KEYPAD_DIVIDE = 623
    KEYPAD_MULTIPLY = 624
    KEYPAD_SUBTRACT = 625
    KEYPAD_ADD = 626
    KEYPAD_ENTER = 627
    KEYPAD_EQUAL = 628
    APP_BACK = 629
    APP_FORWARD = 630
    OEM102 = 631
    GAMEPAD_START = 632
    GAMEPAD_BACK = 633
    GAMEPAD_FACE_LEFT = 634
    GAMEPAD_FACE_RIGHT = 635
    GAMEPAD_FACE_UP = 636
    GAMEPAD_FACE_DOWN = 637
    GAMEPAD_DPAD_LEFT = 638
    GAMEPAD_DPAD_RIGHT = 639
    GAMEPAD_DPAD_UP = 640
    GAMEPAD_DPAD_DOWN = 641
    GAMEPAD_L1 = 642
    GAMEPAD_R1 = 643
    GAMEPAD_L2 = 644
    GAMEPAD_R2 = 645
    GAMEPAD_L3 = 646
    GAMEPAD_R3 = 647
    GAMEPAD_L_STICK_LEFT = 648
    GAMEPAD_L_STICK_RIGHT = 649
    GAMEPAD_L_STICK_UP = 650
    GAMEPAD_L_STICK_DOWN = 651
    GAMEPAD_R_STICK_LEFT = 652
    GAMEPAD_R_STICK_RIGHT = 653
    GAMEPAD_R_STICK_UP = 654
    GAMEPAD_R_STICK_DOWN = 655
    MOUSE_LEFT = 656
    MOUSE_RIGHT = 657
    MOUSE_MIDDLE = 658
    MOUSE_X1 = 659
    MOUSE_X2 = 660
    MOUSE_WHEEL_X = 661
    MOUSE_WHEEL_Y = 662
    RESERVED_FOR_MOD_CTRL = 663
    RESERVED_FOR_MOD_SHIFT = 664
    RESERVED_FOR_MOD_ALT = 665
    RESERVED_FOR_MOD_SUPER = 666
    NAMED_KEY__E_N_D = 667
    MOD_CTRL = 4096
    MOD_SHIFT = 8192
    MOD_ALT = 16384
    MOD_SUPER = 32768

class InputFlags(IntFlag):
    NONE = 0x0
    REPEAT = 0x1
    ROUTE_ACTIVE = 0x400
    ROUTE_FOCUSED = 0x800
    ROUTE_GLOBAL = 0x1000
    ROUTE_ALWAYS = 0x2000
    ROUTE_OVER_FOCUSED = 0x4000
    ROUTE_OVER_ACTIVE = 0x8000
    ROUTE_UNLESS_BG_FOCUSED = 0x10000
    ROUTE_FROM_ROOT_WINDOW = 0x20000
    TOOLTIP = 0x40000

class ConfigFlags(IntFlag):
    NONE = 0x0
    NAV_ENABLE_KEYBOARD = 0x1
    NAV_ENABLE_GAMEPAD = 0x2
    NO_MOUSE = 0x10
    NO_MOUSE_CURSOR_CHANGE = 0x20
    NO_KEYBOARD = 0x40
    DOCKING_ENABLE = 0x80
    VIEWPORTS_ENABLE = 0x400
    DPI_ENABLE_SCALE_VIEWPORTS = 0x4000
    DPI_ENABLE_SCALE_FONTS = 0x8000
    IS_S_R_G_B = 0x100000
    IS_TOUCH_SCREEN = 0x200000
    NAV_ENABLE_SET_MOUSE_POS = 0x4
    NAV_NO_CAPTURE_KEYBOARD = 0x8

class BackendFlags(IntFlag):
    NONE = 0x0
    HAS_GAMEPAD = 0x1
    HAS_MOUSE_CURSORS = 0x2
    HAS_SET_MOUSE_POS = 0x4
    RENDERER_HAS_VTX_OFFSET = 0x8
    PLATFORM_HAS_VIEWPORTS = 0x400
    HAS_MOUSE_HOVERED_VIEWPORT = 0x800
    RENDERER_HAS_VIEWPORTS = 0x1000

class Col(IntEnum):
    TEXT = 0
    TEXT_DISABLED = 1
    WINDOW_BG = 2
    CHILD_BG = 3
    POPUP_BG = 4
    BORDER = 5
    BORDER_SHADOW = 6
    FRAME_BG = 7
    FRAME_BG_HOVERED = 8
    FRAME_BG_ACTIVE = 9
    TITLE_BG = 10
    TITLE_BG_ACTIVE = 11
    TITLE_BG_COLLAPSED = 12
    MENU_BAR_BG = 13
    SCROLLBAR_BG = 14
    SCROLLBAR_GRAB = 15
    SCROLLBAR_GRAB_HOVERED = 16
    SCROLLBAR_GRAB_ACTIVE = 17
    CHECK_MARK = 18
    SLIDER_GRAB = 19
    SLIDER_GRAB_ACTIVE = 20
    BUTTON = 21
    BUTTON_HOVERED = 22
    BUTTON_ACTIVE = 23
    HEADER = 24
    HEADER_HOVERED = 25
    HEADER_ACTIVE = 26
    SEPARATOR = 27
    SEPARATOR_HOVERED = 28
    SEPARATOR_ACTIVE = 29
    RESIZE_GRIP = 30
    RESIZE_GRIP_HOVERED = 31
    RESIZE_GRIP_ACTIVE = 32
    TAB_HOVERED = 33
    TAB = 34
    TAB_SELECTED = 35
    TAB_SELECTED_OVERLINE = 36
    TAB_DIMMED = 37
    TAB_DIMMED_SELECTED = 38
    TAB_DIMMED_SELECTED_OVERLINE = 39
    DOCKING_PREVIEW = 40
    DOCKING_EMPTY_BG = 41
    PLOT_LINES = 42
    PLOT_LINES_HOVERED = 43
    PLOT_HISTOGRAM = 44
    PLOT_HISTOGRAM_HOVERED = 45
    TABLE_HEADER_BG = 46
    TABLE_BORDER_STRONG = 47
    TABLE_BORDER_LIGHT = 48
    TABLE_ROW_BG = 49
    TABLE_ROW_BG_ALT = 50
    TEXT_LINK = 51
    TEXT_SELECTED_BG = 52
    DRAG_DROP_TARGET = 53
    NAV_CURSOR = 54
    NAV_WINDOWING_HIGHLIGHT = 55
    NAV_WINDOWING_DIM_BG = 56
    MODAL_WINDOW_DIM_BG = 57
    TAB_ACTIVE = 35
    TAB_UNFOCUSED = 37
    TAB_UNFOCUSED_ACTIVE = 38
    NAV_HIGHLIGHT = 54

class StyleVar(IntEnum):
    ALPHA = 0
    DISABLED_ALPHA = 1
    WINDOW_PADDING = 2
    WINDOW_ROUNDING = 3
    WINDOW_BORDER_SIZE = 4
    WINDOW_MIN_SIZE = 5
    WINDOW_TITLE_ALIGN = 6
    CHILD_ROUNDING = 7
    CHILD_BORDER_SIZE = 8
    POPUP_ROUNDING = 9
    POPUP_BORDER_SIZE = 10
    FRAME_PADDING = 11
    FRAME_ROUNDING = 12
    FRAME_BORDER_SIZE = 13
    ITEM_SPACING = 14
    ITEM_INNER_SPACING = 15
    INDENT_SPACING = 16
    CELL_PADDING = 17
    SCROLLBAR_SIZE = 18
    SCROLLBAR_ROUNDING = 19
    GRAB_MIN_SIZE = 20
    GRAB_ROUNDING = 21
    IMAGE_BORDER_SIZE = 22
    TAB_ROUNDING = 23
    TAB_BORDER_SIZE = 24
    TAB_BAR_BORDER_SIZE = 25
    TAB_BAR_OVERLINE_SIZE = 26
    TABLE_ANGLED_HEADERS_ANGLE = 27
    TABLE_ANGLED_HEADERS_TEXT_ALIGN = 28
    BUTTON_TEXT_ALIGN = 29
    SELECTABLE_TEXT_ALIGN = 30
    SEPARATOR_TEXT_BORDER_SIZE = 31
    SEPARATOR_TEXT_ALIGN = 32
    SEPARATOR_TEXT_PADDING = 33
    DOCKING_SEPARATOR_SIZE = 34

class ButtonFlags(IntFlag):
    NONE = 0x0
    MOUSE_BUTTON_LEFT = 0x1
    MOUSE_BUTTON_RIGHT = 0x2
    MOUSE_BUTTON_MIDDLE = 0x4
    MOUSE_BUTTON_MASK_ = 0x7
    ENABLE_NAV = 0x8

class ColorEditFlags(IntFlag):
    NONE = 0x0
    NO_ALPHA = 0x2
    NO_PICKER = 0x4
    NO_OPTIONS = 0x8
    NO_SMALL_PREVIEW = 0x10
    NO_INPUTS = 0x20
    NO_TOOLTIP = 0x40
    NO_LABEL = 0x80
    NO_SIDE_PREVIEW = 0x100
    NO_DRAG_DROP = 0x200
    NO_BORDER = 0x400
    ALPHA_OPAQUE = 0x800
    ALPHA_NO_BG = 0x1000
    ALPHA_PREVIEW_HALF = 0x2000
    ALPHA_BAR = 0x10000
    H_D_R = 0x80000
    DISPLAY_R_G_B = 0x100000
    DISPLAY_H_S_V = 0x200000
    DISPLAY_HEX = 0x400000
    UINT8 = 0x800000
    FLOAT = 0x1000000
    PICKER_HUE_BAR = 0x2000000
    PICKER_HUE_WHEEL = 0x4000000
    INPUT_R_G_B = 0x8000000
    INPUT_H_S_V = 0x10000000
    DEFAULT_OPTIONS_ = 0xa900000
    ALPHA_MASK_ = 0x3802
    DISPLAY_MASK_ = 0x700000
    DATA_TYPE_MASK_ = 0x1800000
    PICKER_MASK_ = 0x6000000
    INPUT_MASK_ = 0x18000000
    ALPHA_PREVIEW = 0x0

class SliderFlags(IntFlag):
    NONE = 0x0
    LOGARITHMIC = 0x20
    NO_ROUND_TO_FORMAT = 0x40
    NO_INPUT = 0x80
    WRAP_AROUND = 0x100
    CLAMP_ON_INPUT = 0x200
    CLAMP_ZERO_RANGE = 0x400
    NO_SPEED_TWEAKS = 0x800
    ALWAYS_CLAMP = 0x600
    INVALID_MASK_ = 0x7000000f

class MouseButton(IntEnum):
    LEFT = 0
    RIGHT = 1
    MIDDLE = 2

class MouseCursor(IntEnum):
    NONE = -1
    ARROW = 0
    TEXT_INPUT = 1
    RESIZE_ALL = 2
    RESIZE_N_S = 3
    RESIZE_E_W = 4
    RESIZE_N_E_S_W = 5
    RESIZE_N_W_S_E = 6
    HAND = 7
    WAIT = 8
    PROGRESS = 9
    NOT_ALLOWED = 10

class MouseSource(IntEnum):
    MOUSE = 0
    TOUCH_SCREEN = 1
    PEN = 2

class Cond(IntEnum):
    NONE = 0
    ALWAYS = 1
    ONCE = 2
    FIRST_USE_EVER = 4
    APPEARING = 8

class TableFlags(IntFlag):
    NONE = 0x0
    RESIZABLE = 0x1
    REORDERABLE = 0x2
    HIDEABLE = 0x4
    SORTABLE = 0x8
    NO_SAVED_SETTINGS = 0x10
    CONTEXT_MENU_IN_BODY = 0x20
    ROW_BG = 0x40
    BORDERS_INNER_H = 0x80
    BORDERS_OUTER_H = 0x100
    BORDERS_INNER_V = 0x200
    BORDERS_OUTER_V = 0x400
    BORDERS_H = 0x180
    BORDERS_V = 0x600
    BORDERS_INNER = 0x280
    BORDERS_OUTER = 0x500
    BORDERS = 0x780
    NO_BORDERS_IN_BODY = 0x800
    NO_BORDERS_IN_BODY_UNTIL_RESIZE = 0x1000
    SIZING_FIXED_FIT = 0x2000
    SIZING_FIXED_SAME = 0x4000
    SIZING_STRETCH_PROP = 0x6000
    SIZING_STRETCH_SAME = 0x8000
    NO_HOST_EXTEND_X = 0x10000
    NO_HOST_EXTEND_Y = 0x20000
    NO_KEEP_COLUMNS_VISIBLE = 0x40000
    PRECISE_WIDTHS = 0x80000
    NO_CLIP = 0x100000
    PAD_OUTER_X = 0x200000
    NO_PAD_OUTER_X = 0x400000
    NO_PAD_INNER_X = 0x800000
    SCROLL_X = 0x1000000
    SCROLL_Y = 0x2000000
    SORT_MULTI = 0x4000000
    SORT_TRISTATE = 0x8000000
    HIGHLIGHT_HOVERED_COLUMN = 0x10000000
    SIZING_MASK_ = 0xe000

class TableColumnFlags(IntFlag):
    NONE = 0x0
    DISABLED = 0x1
    DEFAULT_HIDE = 0x2
    DEFAULT_SORT = 0x4
    WIDTH_STRETCH = 0x8
    WIDTH_FIXED = 0x10
    NO_RESIZE = 0x20
    NO_REORDER = 0x40
    NO_HIDE = 0x80
    NO_CLIP = 0x100
    NO_SORT = 0x200
    NO_SORT_ASCENDING = 0x400
    NO_SORT_DESCENDING = 0x800
    NO_HEADER_LABEL = 0x1000
    NO_HEADER_WIDTH = 0x2000
    PREFER_SORT_ASCENDING = 0x4000
    PREFER_SORT_DESCENDING = 0x8000
    INDENT_ENABLE = 0x10000
    INDENT_DISABLE = 0x20000
    ANGLED_HEADER = 0x40000
    IS_ENABLED = 0x1000000
    IS_VISIBLE = 0x2000000
    IS_SORTED = 0x4000000
    IS_HOVERED = 0x8000000
    WIDTH_MASK_ = 0x18
    INDENT_MASK_ = 0x30000
    STATUS_MASK_ = 0xf000000
    NO_DIRECT_RESIZE_ = 0x40000000

class TableRowFlags(IntFlag):
    NONE = 0x0
    HEADERS = 0x1

class TableBgTarget(IntEnum):
    NONE = 0
    ROW_BG0 = 1
    ROW_BG1 = 2
    CELL_BG = 3

class MultiSelectFlags(IntFlag):
    NONE = 0x0
    SINGLE_SELECT = 0x1
    NO_SELECT_ALL = 0x2
    NO_RANGE_SELECT = 0x4
    NO_AUTO_SELECT = 0x8
    NO_AUTO_CLEAR = 0x10
    NO_AUTO_CLEAR_ON_RESELECT = 0x20
    BOX_SELECT1D = 0x40
    BOX_SELECT2D = 0x80
    BOX_SELECT_NO_SCROLL = 0x100
    CLEAR_ON_ESCAPE = 0x200
    CLEAR_ON_CLICK_VOID = 0x400
    SCOPE_WINDOW = 0x800
    SCOPE_RECT = 0x1000
    SELECT_ON_CLICK = 0x2000
    SELECT_ON_CLICK_RELEASE = 0x4000
    NAV_WRAP_X = 0x10000

class SelectionRequestType(IntEnum):
    NONE = 0
    SET_ALL = 1
    SET_RANGE = 2

class DrawFlags(IntFlag):
    NONE = 0x0
    CLOSED = 0x1
    ROUND_CORNERS_TOP_LEFT = 0x10
    ROUND_CORNERS_TOP_RIGHT = 0x20
    ROUND_CORNERS_BOTTOM_LEFT = 0x40
    ROUND_CORNERS_BOTTOM_RIGHT = 0x80
    ROUND_CORNERS_NONE = 0x100
    ROUND_CORNERS_TOP = 0x30
    ROUND_CORNERS_BOTTOM = 0xc0
    ROUND_CORNERS_LEFT = 0x50
    ROUND_CORNERS_RIGHT = 0xa0
    ROUND_CORNERS_ALL = 0xf0
    ROUND_CORNERS_DEFAULT_ = 0xf0
    ROUND_CORNERS_MASK_ = 0x1f0

class DrawListFlags(IntFlag):
    NONE = 0x0
    ANTI_ALIASED_LINES = 0x1
    ANTI_ALIASED_LINES_USE_TEX = 0x2
    ANTI_ALIASED_FILL = 0x4
    ALLOW_VTX_OFFSET = 0x8

class FontAtlasFlags(IntFlag):
    NONE = 0x0
    NO_POWER_OF_TWO_HEIGHT = 0x1
    NO_MOUSE_CURSORS = 0x2
    NO_BAKED_LINES = 0x4

class ViewportFlags(IntFlag):
    NONE = 0x0
    IS_PLATFORM_WINDOW = 0x1
    IS_PLATFORM_MONITOR = 0x2
    OWNED_BY_APP = 0x4
    NO_DECORATION = 0x8
    NO_TASK_BAR_ICON = 0x10
    NO_FOCUS_ON_APPEARING = 0x20
    NO_FOCUS_ON_CLICK = 0x40
    NO_INPUTS = 0x80
    NO_RENDERER_CLEAR = 0x100
    NO_AUTO_MERGE = 0x200
    TOP_MOST = 0x400
    CAN_HOST_OTHER_WINDOWS = 0x800
    IS_MINIMIZED = 0x1000
    IS_FOCUSED = 0x2000

def get_style() -> Style: ...
def show_demo_window(p_open: Optional[bool]=None) -> bool: ...
def show_metrics_window(p_open: Optional[bool]=None) -> bool: ...
def show_debug_log_window(p_open: Optional[bool]=None) -> bool: ...
def show_id_stack_tool_window(p_open: Optional[bool]=None) -> bool: ...
def show_about_window(p_open: Optional[bool]=None) -> bool: ...
def show_style_editor(ref: Optional[Style]=None): ...
def show_style_selector(label: str) -> bool: ...
def show_font_selector(label: str): ...
def show_user_guide(): ...
def get_version() -> str: ...
def style_colors_dark(dst: Optional[Style]=None): ...
def style_colors_light(dst: Optional[Style]=None): ...
def style_colors_classic(dst: Optional[Style]=None): ...
def begin(name: str, p_open: Optional[bool]=None, flags: WindowFlags=0) -> Tuple[bool, bool]: ...
def end(): ...
def begin_child(str_id: str, size: Vec2=(0, 0), child_flags: ChildFlags=0, window_flags: WindowFlags=0) -> bool: ...
def end_child(): ...
def is_window_appearing() -> bool: ...
def is_window_collapsed() -> bool: ...
def is_window_focused(flags: FocusedFlags=0) -> bool: ...
def is_window_hovered(flags: HoveredFlags=0) -> bool: ...
def get_window_draw_list() -> DrawList: ...
def get_window_dpi_scale() -> float: ...
def get_window_pos() -> Vec2: ...
def get_window_size() -> Vec2: ...
def get_window_width() -> float: ...
def get_window_height() -> float: ...
def get_window_viewport() -> Viewport: ...
def set_next_window_pos(pos: Vec2, cond: Cond=0, pivot: Vec2=(0, 0)): ...
def set_next_window_size(size: Vec2, cond: Cond=0): ...
def set_next_window_content_size(size: Vec2): ...
def set_next_window_collapsed(collapsed: bool, cond: Cond=0): ...
def set_next_window_focus(): ...
def set_next_window_scroll(scroll: Vec2): ...
def set_next_window_bg_alpha(alpha: float): ...
def set_window_pos(pos: Vec2, cond: Cond=0): ...
def set_window_size(size: Vec2, cond: Cond=0): ...
def set_window_collapsed(collapsed: bool, cond: Cond=0): ...
def set_window_focus(): ...
def set_window_font_scale(scale: float): ...
def set_window_pos_str(name: str, pos: Vec2, cond: Cond=0): ...
def set_window_size_str(name: str, size: Vec2, cond: Cond=0): ...
def set_window_collapsed_str(name: str, collapsed: bool, cond: Cond=0): ...
def set_window_focus_str(name: str): ...
def get_scroll_x() -> float: ...
def get_scroll_y() -> float: ...
def set_scroll_x(scroll_x: float): ...
def set_scroll_y(scroll_y: float): ...
def get_scroll_max_x() -> float: ...
def get_scroll_max_y() -> float: ...
def set_scroll_here_x(center_x_ratio: float=0.5): ...
def set_scroll_here_y(center_y_ratio: float=0.5): ...
def set_scroll_from_pos_x(local_x: float, center_x_ratio: float=0.5): ...
def set_scroll_from_pos_y(local_y: float, center_y_ratio: float=0.5): ...
def push_font(font: Font): ...
def pop_font(): ...
def push_style_color(idx: Col, col: Color): ...
def push_style_color_im_vec4(idx: Col, col: Vec4): ...
def pop_style_color(count: int=1): ...
def push_style_var(idx: StyleVar, val: float): ...
def push_style_var_im_vec2(idx: StyleVar, val: Vec2): ...
def push_style_var_x(idx: StyleVar, val_x: float): ...
def push_style_var_y(idx: StyleVar, val_y: float): ...
def pop_style_var(count: int=1): ...
def push_item_flag(option: ItemFlags, enabled: bool): ...
def pop_item_flag(): ...
def push_item_width(item_width: float): ...
def pop_item_width(): ...
def set_next_item_width(item_width: float): ...
def calc_item_width() -> float: ...
def push_text_wrap_pos(wrap_local_pos_x: float=0.0): ...
def pop_text_wrap_pos(): ...
def get_font() -> Font: ...
def get_font_size() -> float: ...
def get_font_tex_uv_white_pixel() -> Vec2: ...
def get_color_u32(idx: Col, alpha_mul: float=1.0) -> Color: ...
def get_color_u32_im_vec4(col: Vec4) -> Color: ...
def get_color_u32_im_u32(col: Color, alpha_mul: float=1.0) -> Color: ...
def get_cursor_screen_pos() -> Vec2: ...
def set_cursor_screen_pos(pos: Vec2): ...
def get_content_region_avail() -> Vec2: ...
def get_cursor_pos() -> Vec2: ...
def get_cursor_pos_x() -> float: ...
def get_cursor_pos_y() -> float: ...
def set_cursor_pos(local_pos: Vec2): ...
def set_cursor_pos_x(local_x: float): ...
def set_cursor_pos_y(local_y: float): ...
def get_cursor_start_pos() -> Vec2: ...
def separator(): ...
def same_line(offset_from_start_x: float=0.0, spacing: float=-1.0): ...
def new_line(): ...
def spacing(): ...
def dummy(size: Vec2): ...
def indent(indent_w: float=0.0): ...
def unindent(indent_w: float=0.0): ...
def begin_group(): ...
def end_group(): ...
def align_text_to_frame_padding(): ...
def get_text_line_height() -> float: ...
def get_text_line_height_with_spacing() -> float: ...
def get_frame_height() -> float: ...
def get_frame_height_with_spacing() -> float: ...
def push_id(str_id: str): ...
def push_id_str(str_id_begin: str, str_id_end: str): ...
def push_id_int(int_id: int): ...
def pop_id(): ...
def get_id_int(int_id: int) -> ID: ...
def text(fmt: str): ...
def text_colored(col: Vec4, fmt: str): ...
def text_disabled(fmt: str): ...
def text_wrapped(fmt: str): ...
def label_text(label: str, fmt: str): ...
def bullet_text(fmt: str): ...
def separator_text(label: str): ...
def button(label: str, size: Vec2=(0, 0)) -> bool: ...
def small_button(label: str) -> bool: ...
def invisible_button(str_id: str, size: Vec2, flags: ButtonFlags=0) -> bool: ...
def arrow_button(str_id: str, dir: Dir) -> bool: ...
def checkbox(label: str, v: bool) -> Tuple[bool, bool]: ...
def radio_button(label: str, active: bool) -> bool: ...
def progress_bar(fraction: float, size_arg: Vec2=(-1.175494351e-38, 0), overlay: Optional[str]=None): ...
def bullet(): ...
def text_link(label: str) -> bool: ...
def text_link_open_u_r_l(label: str, url: Optional[str]=None): ...
def image(user_texture_id: TextureID, image_size: Vec2, uv0: Vec2=(0, 0), uv1: Vec2=(1, 1)): ...
def image_with_bg(user_texture_id: TextureID, image_size: Vec2, uv0: Vec2=(0, 0), uv1: Vec2=(1, 1), bg_col: Vec4=(0, 0, 0, 0), tint_col: Vec4=(1, 1, 1, 1)): ...
def image_button(str_id: str, user_texture_id: TextureID, image_size: Vec2, uv0: Vec2=(0, 0), uv1: Vec2=(1, 1), bg_col: Vec4=(0, 0, 0, 0), tint_col: Vec4=(1, 1, 1, 1)) -> bool: ...
def drag_float(label: str, v: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, float]: ...
def drag_float2(label: str, v: Tuple[float, float], v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float]]: ...
def drag_float3(label: str, v: Tuple[float, float, float], v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float, float]]: ...
def drag_float4(label: str, v: Tuple[float, float, float, float], v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float, float, float]]: ...
def drag_int(label: str, v: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, int]: ...
def drag_int2(label: str, v: Tuple[int, int], v_speed: float=1.0, v_min: int=0, v_max: int=0, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int]]: ...
def drag_int3(label: str, v: Tuple[int, int, int], v_speed: float=1.0, v_min: int=0, v_max: int=0, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int, int]]: ...
def drag_int4(label: str, v: Tuple[int, int, int, int], v_speed: float=1.0, v_min: int=0, v_max: int=0, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int, int, int]]: ...
def slider_float(label: str, v: float, v_min: float, v_max: float, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, float]: ...
def slider_float2(label: str, v: Tuple[float, float], v_min: float, v_max: float, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float]]: ...
def slider_float3(label: str, v: Tuple[float, float, float], v_min: float, v_max: float, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float, float]]: ...
def slider_float4(label: str, v: Tuple[float, float, float, float], v_min: float, v_max: float, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, Tuple[float, float, float, float]]: ...
def slider_angle(label: str, v_rad: float, v_degrees_min: float=-360.0, v_degrees_max: float=+360.0, format: str="%.0f deg", flags: SliderFlags=0) -> Tuple[bool, float]: ...
def slider_int(label: str, v: int, v_min: int, v_max: int, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, int]: ...
def slider_int2(label: str, v: Tuple[int, int], v_min: int, v_max: int, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int]]: ...
def slider_int3(label: str, v: Tuple[int, int, int], v_min: int, v_max: int, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int, int]]: ...
def slider_int4(label: str, v: Tuple[int, int, int, int], v_min: int, v_max: int, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, Tuple[int, int, int, int]]: ...
def v_slider_float(label: str, size: Vec2, v: float, v_min: float, v_max: float, format: str="%.3f", flags: SliderFlags=0) -> Tuple[bool, float]: ...
def v_slider_int(label: str, size: Vec2, v: int, v_min: int, v_max: int, format: str="%d", flags: SliderFlags=0) -> Tuple[bool, int]: ...
def input_float(label: str, v: float, step: float=0.0, step_fast: float=0.0, format: str="%.3f", flags: InputTextFlags=0) -> Tuple[bool, float]: ...
def input_float2(label: str, v: Tuple[float, float], format: str="%.3f", flags: InputTextFlags=0) -> Tuple[bool, Tuple[float, float]]: ...
def input_float3(label: str, v: Tuple[float, float, float], format: str="%.3f", flags: InputTextFlags=0) -> Tuple[bool, Tuple[float, float, float]]: ...
def input_float4(label: str, v: Tuple[float, float, float, float], format: str="%.3f", flags: InputTextFlags=0) -> Tuple[bool, Tuple[float, float, float, float]]: ...
def input_int(label: str, v: int, step: int=1, step_fast: int=100, flags: InputTextFlags=0) -> Tuple[bool, int]: ...
def input_int2(label: str, v: Tuple[int, int], flags: InputTextFlags=0) -> Tuple[bool, Tuple[int, int]]: ...
def input_int3(label: str, v: Tuple[int, int, int], flags: InputTextFlags=0) -> Tuple[bool, Tuple[int, int, int]]: ...
def input_int4(label: str, v: Tuple[int, int, int, int], flags: InputTextFlags=0) -> Tuple[bool, Tuple[int, int, int, int]]: ...
def color_edit3(label: str, col: Tuple[float, float, float], flags: ColorEditFlags=0) -> Tuple[bool, Tuple[float, float, float]]: ...
def color_edit4(label: str, col: Tuple[float, float, float, float], flags: ColorEditFlags=0) -> Tuple[bool, Tuple[float, float, float, float]]: ...
def color_picker3(label: str, col: Tuple[float, float, float], flags: ColorEditFlags=0) -> Tuple[bool, Tuple[float, float, float]]: ...
def color_button(desc_id: str, col: Vec4, flags: ColorEditFlags=0, size: Vec2=(0, 0)) -> bool: ...
def set_color_edit_options(flags: ColorEditFlags): ...
def tree_node(label: str) -> bool: ...
def tree_node_str(str_id: str, fmt: str) -> bool: ...
def tree_node_ex(label: str, flags: TreeNodeFlags=0) -> bool: ...
def tree_node_ex_str(str_id: str, flags: TreeNodeFlags, fmt: str) -> bool: ...
def tree_push(str_id: str): ...
def tree_pop(): ...
def get_tree_node_to_label_spacing() -> float: ...
def collapsing_header(label: str, flags: TreeNodeFlags=0) -> bool: ...
def set_next_item_open(is_open: bool, cond: Cond=0): ...
def set_next_item_storage_id(storage_id: ID): ...
def selectable(label: str, selected: bool=False, flags: SelectableFlags=0, size: Vec2=(0, 0)) -> bool: ...
def begin_multi_select(flags: MultiSelectFlags, selection_size: int=-1, items_count: int=-1) -> MultiSelectIO: ...
def end_multi_select() -> MultiSelectIO: ...
def set_next_item_selection_user_data(selection_user_data: SelectionUserData): ...
def is_item_toggled_selection() -> bool: ...
def begin_menu_bar() -> bool: ...
def end_menu_bar(): ...
def begin_main_menu_bar() -> bool: ...
def end_main_menu_bar(): ...
def begin_menu(label: str, enabled: bool=True) -> bool: ...
def end_menu(): ...
def menu_item(label: str, shortcut: Optional[str]=None, selected: bool=False, enabled: bool=True) -> bool: ...
def begin_tooltip() -> bool: ...
def end_tooltip(): ...
def set_tooltip(fmt: str): ...
def begin_item_tooltip() -> bool: ...
def set_item_tooltip(fmt: str): ...
def begin_popup(str_id: str, flags: WindowFlags=0) -> bool: ...
def begin_popup_modal(name: str, p_open: Optional[bool]=None, flags: WindowFlags=0) -> Tuple[bool, bool]: ...
def end_popup(): ...
def open_popup(str_id: str, popup_flags: PopupFlags=0): ...
def open_popup_on_item_click(str_id: Optional[str]=None, popup_flags: PopupFlags=1): ...
def close_current_popup(): ...
def begin_popup_context_item(str_id: Optional[str]=None, popup_flags: PopupFlags=1) -> bool: ...
def begin_popup_context_window(str_id: Optional[str]=None, popup_flags: PopupFlags=1) -> bool: ...
def begin_popup_context_void(str_id: Optional[str]=None, popup_flags: PopupFlags=1) -> bool: ...
def is_popup_open(str_id: str, flags: PopupFlags=0) -> bool: ...
def begin_table(str_id: str, columns: int, flags: TableFlags=0, outer_size: Vec2=(0.0, 0.0), inner_width: float=0.0) -> bool: ...
def end_table(): ...
def table_next_row(row_flags: TableRowFlags=0, min_row_height: float=0.0): ...
def table_next_column() -> bool: ...
def table_set_column_index(column_n: int) -> bool: ...
def table_setup_scroll_freeze(cols: int, rows: int): ...
def table_header(label: str): ...
def table_headers_row(): ...
def table_angled_headers_row(): ...
def table_get_column_count() -> int: ...
def table_get_column_index() -> int: ...
def table_get_row_index() -> int: ...
def table_get_column_name(column_n: int=-1) -> str: ...
def table_get_column_flags(column_n: int=-1) -> TableColumnFlags: ...
def table_set_column_enabled(column_n: int, v: bool): ...
def table_get_hovered_column() -> int: ...
def table_set_bg_color(target: TableBgTarget, color: Color, column_n: int=-1): ...
def columns(count: int=1, id: Optional[str]=None, borders: bool=True): ...
def next_column(): ...
def get_column_index() -> int: ...
def get_column_width(column_index: int=-1) -> float: ...
def set_column_width(column_index: int, width: float): ...
def get_column_offset(column_index: int=-1) -> float: ...
def set_column_offset(column_index: int, offset_x: float): ...
def get_columns_count() -> int: ...
def begin_tab_bar(str_id: str, flags: TabBarFlags=0) -> bool: ...
def end_tab_bar(): ...
def begin_tab_item(label: str, p_open: Optional[bool]=None, flags: TabItemFlags=0) -> Tuple[bool, bool]: ...
def end_tab_item(): ...
def tab_item_button(label: str, flags: TabItemFlags=0) -> bool: ...
def set_tab_item_closed(tab_or_docked_window_label: str): ...
def dock_space(dockspace_id: ID, size: Vec2=(0, 0), flags: DockNodeFlags=0, window_class: Optional[WindowClass]=None) -> ID: ...
def dock_space_over_viewport(dockspace_id: ID=0, viewport: Optional[Viewport]=None, flags: DockNodeFlags=0, window_class: Optional[WindowClass]=None) -> ID: ...
def set_next_window_dock_id(dock_id: ID, cond: Cond=0): ...
def set_next_window_class(window_class: WindowClass): ...
def get_window_dock_id() -> ID: ...
def is_window_docked() -> bool: ...
def log_to_t_t_y(auto_open_depth: int=-1): ...
def log_to_file(auto_open_depth: int=-1, filename: Optional[str]=None): ...
def log_to_clipboard(auto_open_depth: int=-1): ...
def log_finish(): ...
def log_buttons(): ...
def log_text(fmt: str): ...
def begin_drag_drop_source(flags: DragDropFlags=0) -> bool: ...
def set_drag_drop_payload(type: str, data: memoryview, sz: size_t, cond: Cond=0) -> bool: ...
def end_drag_drop_source(): ...
def begin_drag_drop_target() -> bool: ...
def accept_drag_drop_payload(type: str, flags: DragDropFlags=0) -> Payload: ...
def end_drag_drop_target(): ...
def get_drag_drop_payload() -> Payload: ...
def begin_disabled(disabled: bool=True): ...
def end_disabled(): ...
def push_clip_rect(clip_rect_min: Vec2, clip_rect_max: Vec2, intersect_with_current_clip_rect: bool): ...
def pop_clip_rect(): ...
def set_item_default_focus(): ...
def set_keyboard_focus_here(offset: int=0): ...
def set_nav_cursor_visible(visible: bool): ...
def set_next_item_allow_overlap(): ...
def is_item_hovered(flags: HoveredFlags=0) -> bool: ...
def is_item_active() -> bool: ...
def is_item_focused() -> bool: ...
def is_item_clicked(mouse_button: MouseButton=0) -> bool: ...
def is_item_visible() -> bool: ...
def is_item_edited() -> bool: ...
def is_item_activated() -> bool: ...
def is_item_deactivated() -> bool: ...
def is_item_deactivated_after_edit() -> bool: ...
def is_item_toggled_open() -> bool: ...
def is_any_item_hovered() -> bool: ...
def is_any_item_active() -> bool: ...
def is_any_item_focused() -> bool: ...
def get_item_id() -> ID: ...
def get_item_rect_min() -> Vec2: ...
def get_item_rect_max() -> Vec2: ...
def get_item_rect_size() -> Vec2: ...
def get_main_viewport() -> Viewport: ...
def get_background_draw_list(viewport: Optional[Viewport]=None) -> DrawList: ...
def get_foreground_draw_list(viewport: Optional[Viewport]=None) -> DrawList: ...
def is_rect_visible_by_size(size: Vec2) -> bool: ...
def is_rect_visible(rect_min: Vec2, rect_max: Vec2) -> bool: ...
def get_time() -> double: ...
def get_frame_count() -> int: ...
def get_style_color_name(idx: Col) -> str: ...
def set_state_storage(storage: Storage): ...
def get_state_storage() -> Storage: ...
def calc_text_size(text: str, text_end: Optional[str]=None, hide_text_after_double_hash: bool=False, wrap_width: float=-1.0) -> Vec2: ...
def color_convert_u32_to_float4(value: Color) -> Vec4: ...
def color_convert_float4_to_u32(value: Vec4) -> Color: ...
def is_key_down(key: Key) -> bool: ...
def is_key_pressed(key: Key, repeat: bool=True) -> bool: ...
def is_key_released(key: Key) -> bool: ...
def is_key_chord_pressed(key_chord: KeyChord) -> bool: ...
def get_key_pressed_amount(key: Key, repeat_delay: float, rate: float) -> int: ...
def get_key_name(key: Key) -> str: ...
def set_next_frame_want_capture_keyboard(want_capture_keyboard: bool): ...
def shortcut(key_chord: KeyChord, flags: InputFlags=0) -> bool: ...
def set_next_item_shortcut(key_chord: KeyChord, flags: InputFlags=0): ...
def set_item_key_owner(key: Key): ...
def is_mouse_down(button: MouseButton) -> bool: ...
def is_mouse_clicked(button: MouseButton, repeat: bool=False) -> bool: ...
def is_mouse_released(button: MouseButton) -> bool: ...
def is_mouse_double_clicked(button: MouseButton) -> bool: ...
def is_mouse_released_with_delay(button: MouseButton, delay: float) -> bool: ...
def get_mouse_clicked_count(button: MouseButton) -> int: ...
def is_mouse_hovering_rect(r_min: Vec2, r_max: Vec2, clip: bool=True) -> bool: ...
def is_any_mouse_down() -> bool: ...
def get_mouse_pos() -> Vec2: ...
def get_mouse_pos_on_opening_current_popup() -> Vec2: ...
def is_mouse_dragging(button: MouseButton, lock_threshold: float=-1.0) -> bool: ...
def get_mouse_drag_delta(button: MouseButton=0, lock_threshold: float=-1.0) -> Vec2: ...
def reset_mouse_drag_delta(button: MouseButton=0): ...
def get_mouse_cursor() -> MouseCursor: ...
def set_mouse_cursor(cursor_type: MouseCursor): ...
def set_next_frame_want_capture_mouse(want_capture_mouse: bool): ...
def get_clipboard_text() -> str: ...
def set_clipboard_text(text: str): ...
def load_ini_settings_from_disk(ini_filename: str): ...
def load_ini_settings_from_memory(ini_data: str, ini_size: size_t=0): ...
def save_ini_settings_to_disk(ini_filename: str): ...
def debug_text_encoding(text: str): ...
def debug_flash_style_color(idx: Col): ...
def debug_start_item_picker(): ...
def debug_check_version_and_data_layout(version_str: str, sz_io: size_t, sz_style: size_t, sz_vec2: size_t, sz_vec4: size_t, sz_drawvert: size_t, sz_drawidx: size_t) -> bool: ...
def debug_log(fmt: str): ...
def find_viewport_by_id(id: ID) -> Viewport: ...
def image_im_vec4(user_texture_id: TextureID, image_size: Vec2, uv0: Vec2, uv1: Vec2, tint_col: Vec4, border_col: Vec4): ...
def push_button_repeat(repeat: bool): ...
def pop_button_repeat(): ...
def push_tab_stop(tab_stop: bool): ...
def pop_tab_stop(): ...
def get_content_region_max() -> Vec2: ...
def get_window_content_region_min() -> Vec2: ...
def get_window_content_region_max() -> Vec2: ...
def begin_child_frame(id: ID, size: Vec2, window_flags: WindowFlags=0) -> bool: ...
def end_child_frame(): ...
def show_stack_tool_window(p_open: Optional[bool]=None) -> bool: ...
def set_item_allow_overlap(): ...
def push_allow_keyboard_focus(tab_stop: bool): ...
def pop_allow_keyboard_focus(): ...
