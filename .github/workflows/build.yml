name: Build

on:
  workflow_dispatch
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, windows-2025, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: none

      - name: Build (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev python3-dev libglu1-mesa-dev
          git submodule init
          git config submodule.ext/slang.update none
          git submodule update --init --recursive --depth 1
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DXPG_BUILD_SLANG=0 ..
          cmake --build . -j

      - name: Build (Windows)
        if: runner.os == 'Windows'
        run: |
          git submodule init
          git config submodule.ext/slang.update none
          git submodule update --init --recursive --depth 1
          mkdir build
          cd build
          cmake -DXPG_BUILD_SLANG=0 ..
          cmake --build . --config=Debug -j

      - name: Build (macOS)
        if: runner.os == 'macOS'
        run: |
          wget https://github.com/KhronosGroup/MoltenVK/releases/download/v1.3.0/MoltenVK-macos.tar
          tar xvf MoltenVK-macos.tar
          git submodule init
          git config submodule.ext/slang.update none
          git submodule update --init --recursive --depth 1
          cmake -B ./build -DCMAKE_BUILD_TYPE=Debug -DXPG_BUILD_SLANG=0 . -DXPG_MOLTENVK_PATH=$(pwd)/MoltenVK
          cmake --build ./build -j
